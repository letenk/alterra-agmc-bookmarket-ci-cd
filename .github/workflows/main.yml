name: Push-to-EC2

# Trigger deployment only on push to master branch
on:
  push:
    branches: [master]

jobs:
  build-docker:
    name: "Build Docker Container"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup GO
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      
      - name: create env file
        env:
          DB_SOURCE: ${{ secrets.DB_SOURCE}}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          touch .env
          echo DB_SOURCE=$DB_SOURCE >> .env
          echo JWT_SECRET=$JWT_SECRET >> .env
      
      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} 
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      - name: build docker container
        run: |
          make build_image
      
      - name: push docker container
        run: |
          make push_image
        
  deploy:
    name: Deploy to EC2 on main branch push
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to Server EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST_IP }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${REMOTE_USER}@${REMOTE_HOST} '
          
            #Now we have got the access of EC2 and we will start the deploy .
              sudo chmod 777 /var/run/docker.sock
              docker pull letenk/altera-bookmarket:latest &&
              docker container stop bookmarket || true &&
              docker container rm bookmarket || true &&
              docker container create --name bookmarket -p 80:8080 letenk/altera-bookmarket:latest &&
              docker container start bookmarket
          '